openapi: '3.0.0'

info:
  version: 1.0.3
  title: The Booking System API
  description: The assignment for the Minut

paths:
  /v1/auth/login:
    post:
      summary: Login
      operationId: login
      tags:
        - auth
      requestBody:
        description: The user credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseBody'
        '400':
          description: Bad auth data
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

  /v1/auth/register:
    post:
      summary: Register
      operationId: register
      tags:
        - auth
      requestBody:
        description: The user credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponseBody'
        '409':
          description: Bad auth data
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

  /v1/auth/refresh:
    post:
      summary: Refresh the JWT token
      operationId: refresh
      tags:
        - auth
      requestBody:
        description: The refresh token
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: The JWT refresh token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResponseBody'
        '400':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

  /v1/auth/revoke:
    post:
      summary: Revoke the JWT token
      operationId: revoke
      tags:
        - auth
      requestBody:
        description: The refresh token
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: The JWT refresh token
      responses:
        '204':
          description: OK
        '400':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

  /v1/properties:
    get:
      summary: Get all properties
      operationId: getProperties
      tags:
        - properties
      parameters:
        - name: cursor
          in: query
          description: The cursor to the next page
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
                  cursor:
                    type: string
                    nullable: true
                    description: The cursor to the next page
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
    post:
      summary: Create a new property
      security:
        - bearerAuth: []
      operationId: createProperty
      tags:
        - properties
      requestBody:
        description: The property to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRequestBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '400':
          description: Bad property data
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

  /v1/properties/{id}:
    get:
      summary: Get a property by ID
      operationId: getProperty
      tags:
        - properties
      parameters:
        - name: id
          in: path
          description: The property ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '404':
          description: Property not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
    patch:
      summary: Update a property by ID
      security:
        - bearerAuth: []
      operationId: updateProperty
      tags:
        - properties
      parameters:
        - name: id
          in: path
          description: The property ID
          required: true
          schema:
            type: string
      requestBody:
        description: The property to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The property name
                description:
                  type: string
                  description: The property description
                address:
                  type: string
                  description: The property address
                price:
                  type: number
                  format: float
                  description: The property price
                currency:
                  type: string
                  description: The property currency
                bedrooms:
                  type: integer
                  format: int32
                  description: The property bedrooms
                bathrooms:
                  type: integer
                  format: int32
                  description: The property bathrooms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '400':
          description: Bad property data
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '404':
          description: Property not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
    delete:
      summary: Delete a property by ID
      security:
        - bearerAuth: []
      operationId: deleteProperty
      tags:
        - properties
      parameters:
        - name: id
          in: path
          description: The property ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '404':
          description: Property not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string

  /v1/properties/{id}/owner:
    get:
      summary: Get a property owner by ID
      operationId: getPropertyOwner
      tags:
        - properties
      parameters:
        - name: id
          in: path
          description: The property ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '404':
          description: Property owner not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: Property owner not found

  /v1/properties/{id}/reservations:
    get:
      summary: Get a property reservations by ID
      operationId: getPropertyReservations
      tags:
        - properties
      parameters:
        - name: id
          in: path
          description: The property ID
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: The cursor to the next page
          required: false
          schema:
            type: string
        - name: include
          in: query
          description: additional data to include
          required: false
          schema:
            type: string
            enum:
              - outdated
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reservation'
                  cursor:
                    type: string
                    nullable: true
                    description: The cursor to the next page
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '404':
          description: Property reservations not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: Property reservations not found
    post:
      summary: create a new property reservation
      security:
        - bearerAuth: []
      operationId: createPropertyReservation
      tags:
        - properties
      parameters:
        - name: id
          in: path
          description: The property ID
          required: true
          schema:
            type: string
      requestBody:
        description: The reservation to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequestBody'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '400':
          description: Bad property data
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '404':
          description: Property not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string

  /v1/properties/{id}/chats:
    get:
      summary: Get a property chats by ID
      operationId: getPropertyChats
      tags:
        - properties
      parameters:
        - name: id
          in: path
          description: The property ID
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: The cursor to the next page
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chat'
                  cursor:
                    type: string
                    nullable: true
                    description: The cursor to the next page
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '404':
          description: Property chats not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string

  /v1/guests/{id}/reservations:
    get:
      summary: Get a guest reservations by ID
      operationId: getGuestReservations
      tags:
        - guests
      parameters:
        - name: id
          in: path
          description: The guest ID
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: The cursor to the next page
          required: false
          schema:
            type: string
        - name: include
          in: query
          description: additional data to include
          required: false
          schema:
            type: string
            enum:
              - outdated
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reservation'
                  cursor:
                    type: string
                    nullable: true
                    description: The cursor to the next page
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '404':
          description: Guest reservations not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: the error message

  /v1/guests/{id}/chats:
    get:
      summary: Get a guest chats by ID
      operationId: getGuestChats
      tags:
        - guests
      parameters:
        - name: id
          in: path
          description: The guest ID
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: The cursor to the next page
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chat'
                  cursor:
                    type: string
                    nullable: true
                    description: The cursor to the next page
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '404':
          description: Guest chats not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string

  /v1/reservations/{id}:
    get:
      summary: Get a reservation by ID
      operationId: getReservation
      tags:
        - reservations
      parameters:
        - name: id
          in: path
          description: The reservation ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '404':
          description: Reservation not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string

  /v1/chats/{id}/messages:
    get:
      summary: Get a guest chat messages by ID
      operationId: getChatMessages
      tags:
        - chats
      parameters:
        - name: id
          in: path
          description: The chat ID
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: The cursor to the next page
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  cursor:
                    type: string
                    nullable: true
                    description: The cursor to the next page
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        '404':
          description: Guest chat messages not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequestBody:
      type: object
      required:
        - email
        - secret
      properties:
        email:
          type: string
          format: email
          description: The user email
        password:
          type: string
          description: The user secret

    LoginResponseBody:
      type: object
      required:
        - accessToken
        - refreshToken
      properties:
        accessToken:
          type: string
          description: The JWT token
        refreshToken:
          type: string
          description: The JWT refresh token

    PropertyRequestBody:
      type: object
      required:
        - name
        - address
        - price
        - currency
        - bedrooms
        - bathrooms
      properties:
        name:
          type: string
          description: The property name
        description:
          type: string
          description: The property description
        address:
          type: string
          description: The property address
        price:
          type: number
          format: float
          description: The property price
        currency:
          type: string
          description: The property currency
        bedrooms:
          type: integer
          format: int32
          description: The property bedrooms
        bathrooms:
          type: integer
          format: int32
          description: The property bathrooms

    RegisterRequestBody:
      type: object
      required:
        - name
        - email
        - role
      properties:
        name:
          type: string
          description: The user name
        email:
          type: string
          format: email
          description: The user email
        role:
          type: string
          enum:
            - OWNER
            - GUEST
          description: The user role

    RegisterResponseBody:
      type: object
      required:
        - secret
      properties:
        id:
          type: string
          description: The user secret

    RefreshResponseBody:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string
          description: The JWT token

    Property:
      type: object
      required:
        - id
        - name
        - address
        - price
        - currency
        - bedrooms
        - bathrooms
      properties:
        id:
          type: string
          description: The property ID
        createdAt:
          type: string
          format: date-time
          description: The owner creation date
        updatedAt:
          type: string
          format: date-time
          description: The owner update date
        name:
          type: string
          description: The property name
        description:
          type: string
          nullable: true
          description: The property description
        address:
          type: string
          description: The property address
        price:
          type: number
          format: float
          description: The property price
        currency:
          type: string
          description: The property currency
        bedrooms:
          type: integer
          format: int32
          description: The property bedrooms
        bathrooms:
          type: integer
          format: int32
          description: The property bathrooms
        owner:
          type: object
          nullable: true
          description: The property owner
          properties:
            id:
              type: string
              description: The owner ID
            createdAt:
              type: string
              format: date-time
              description: The owner creation date
            updatedAt:
              type: string
              format: date-time
              description: The owner update date
            name:
              type: string
              description: The owner name
            email:
              type: string
              format: email
              description: The owner email

    Owner:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: string
          description: The owner ID
        createdAt:
          type: string
          format: date-time
          description: The owner creation date
        updatedAt:
          type: string
          format: date-time
          description: The owner update date
        name:
          type: string
          description: The owner name
        email:
          type: string
          format: email
          description: The owner email

    Reservation:
      type: object
      required:
        - id
        - propertyId
        - checkIn
        - checkOut
        - total
        - currency
      properties:
        id:
          type: string
          description: The reservation ID
        createdAt:
          type: string
          format: date-time
          description: The reservation creation date
        updatedAt:
          type: string
          format: date-time
          description: The reservation update date
        propertyId:
          type: string
          description: The property ID
        guestId:
          type: string
          description: The guest ID
        checkIn:
          type: string
          format: date-time
          description: The reservation check-in date
        checkOut:
          type: string
          format: date-time
          description: The reservation check-out date
        total:
          type: number
          format: float
          description: The reservation total
        currency:
          type: string
          description: The reservation currency
        guests:
          type: array
          items:
            type: object
            required:
              - id
              - name
              - email
              - phone
            properties:
              id:
                type: string
                description: The guest ID
              name:
                type: string
                description: The guest name
              email:
                type: string
                format: email
                description: The guest email
              phone:
                type: string
                description: The guest phone

    ReservationRequestBody:
      type: object
      required:
        - checkIn
        - checkOut
        - guestIds
      properties:
        checkIn:
          type: string
          format: date-time
          description: The reservation check-in date
        checkOut:
          type: string
          format: date-time
          description: The reservation check-out date
        guestIds:
          type: array
          items:
            type: string
            description: The guest ID

    Chat:
      type: object
      required:
        - id
        - propertyId
        - guestId
      properties:
        id:
          type: string
          description: The chat ID
        createdAt:
          type: string
          format: date-time
          description: The chat creation date
        updatedAt:
          type: string
          format: date-time
          description: The chat update date
        propertyId:
          type: string
          description: The property ID
        guestId:
          type: string
          description: The guest ID

    Message:
      type: object
      required:
        - id
        - chatId
        - senderId
        - text
      properties:
        id:
          type: string
          description: The message ID
        createdAt:
          type: string
          format: date-time
          description: The message creation date
        updatedAt:
          type: string
          format: date-time
          description: The message update date
        chatId:
          type: string
          description: The chat ID
        senderId:
          type: string
          description: The sender ID
        text:
          type: string
          description: The message text
