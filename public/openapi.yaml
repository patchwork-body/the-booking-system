openapi: '3.0.0'

info:
  version: 1.0.0
  title: The Booking System API
  description: The assignment for the Minut

paths:
  /v1/auth/login:
    post:
      summary: Login
      operationId: login
      tags:
        - auth
      requestBody:
        description: The user credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseBody'
        '400':
          description: Bad auth data
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

  /v1/auth/register:
    post:
      summary: Register
      operationId: register
      tags:
        - auth
      requestBody:
        description: The user credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponseBody'
        '409':
          description: Bad auth data
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

  /v1/auth/refresh:
    post:
      summary: Refresh the JWT token
      operationId: refresh
      tags:
        - auth
      requestBody:
        description: The refresh token
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: The JWT refresh token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResponseBody'
        '400':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

  /v1/auth/revoke:
    post:
      summary: Revoke the JWT token
      operationId: revoke
      tags:
        - auth
      requestBody:
        description: The refresh token
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: The JWT refresh token
      responses:
        '204':
          description: OK
        '400':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

  /v1/properties:
    get:
      summary: Get all properties
      operationId: getProperties
      tags:
        - properties
      parameters:
        - name: cursor
          in: query
          description: The cursor to the next page
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
                  cursor:
                    type: string
                    nullable: true
                    description: The cursor to the next page
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
    post:
      summary: Create a new property
      security:
        - bearerAuth: []
      operationId: createProperty
      tags:
        - properties
      requestBody:
        description: The property to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRequestBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '400':
          description: Bad property data
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

  /v1/properties/{id}:
    get:
      summary: Get a property by ID
      operationId: getProperty
      tags:
        - properties
      parameters:
        - name: id
          in: path
          description: The property ID
          required: true
          schema:
            type: string
        - name: include
          in: query
          description: The included fields
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - owner
                - guests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '404':
          description: Property not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
    post:
      summary: Update a property by ID
      security:
        - bearerAuth: []
      operationId: updateProperty
      tags:
        - properties
      parameters:
        - name: id
          in: path
          description: The property ID
          required: true
          schema:
            type: string
      requestBody:
        description: The property to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '400':
          description: Bad property data
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message
        '404':
          description: Property not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The error message

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequestBody:
      type: object
      required:
        - email
        - secret
      properties:
        email:
          type: string
          format: email
          description: The user email
        password:
          type: string
          description: The user secret

    LoginResponseBody:
      type: object
      required:
        - accessToken
        - refreshToken
      properties:
        accessToken:
          type: string
          description: The JWT token
        refreshToken:
          type: string
          description: The JWT refresh token

    PropertyRequestBody:
      type: object
      required:
        - name
        - address
        - price
        - currency
        - bedrooms
        - bathrooms
      properties:
        name:
          type: string
          description: The property name
        description:
          type: string
          description: The property description
        address:
          type: string
          description: The property address
        price:
          type: number
          format: float
          description: The property price
        currency:
          type: string
          description: The property currency
        bedrooms:
          type: integer
          format: int32
          description: The property bedrooms
        bathrooms:
          type: integer
          format: int32
          description: The property bathrooms

    RegisterRequestBody:
      type: object
      required:
        - name
        - email
        - role
      properties:
        name:
          type: string
          description: The user name
        email:
          type: string
          format: email
          description: The user email
        role:
          type: string
          enum:
            - OWNER
            - GUEST
          description: The user role

    RegisterResponseBody:
      type: object
      required:
        - secret
      properties:
        id:
          type: string
          description: The user secret

    RefreshResponseBody:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string
          description: The JWT token

    Property:
      type: object
      required:
        - id
        - name
        - address
        - price
        - currency
        - bedrooms
        - bathrooms
      properties:
        id:
          type: string
          description: The property ID
        createdAt:
          type: string
          format: date-time
          description: The owner creation date
        updatedAt:
          type: string
          format: date-time
          description: The owner update date
        name:
          type: string
          description: The property name
        description:
          type: string
          nullable: true
          description: The property description
        address:
          type: string
          description: The property address
        price:
          type: number
          format: float
          description: The property price
        currency:
          type: string
          description: The property currency
        bedrooms:
          type: integer
          format: int32
          description: The property bedrooms
        bathrooms:
          type: integer
          format: int32
          description: The property bathrooms
        owner:
          type: object
          nullable: true
          description: The property owner
          properties:
            id:
              type: string
              description: The owner ID
            createdAt:
              type: string
              format: date-time
              description: The owner creation date
            updatedAt:
              type: string
              format: date-time
              description: The owner update date
            name:
              type: string
              description: The owner name
            email:
              type: string
              format: email
              description: The owner email
